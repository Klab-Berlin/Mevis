{
  "name": "ngether",
  "private": true,
  "description": "message propagation system using engine.io",
  "version": "0.2.3",
  "author": {
    "name": "Toni Wagner",
    "email": "i@itsatony.com"
  },
  "dependencies": {
    "mongodb": "1.1.11",
    "engine.io": "0.3.9",
    "engine.io-client": "0.3.7",
    "bubpubsub": "0.8.7"
  },
  "devDependencies": {},
  "engine": "node >= 0.9",
  "readme": "ngether\n=======\n\nngether is a websocket (engine.io) and bubPubSub based data distribution system.\nIt is primarily meant for allowing dynamically growing/shrinking server-meshworks to communicate and sync events/pubsubs\n\n# features:\n\n* connect multiple Spots to one Hub. \n* A Hub only receives incoming connections. \n* A Hub distributes spot-connect-info to newly connecting spots.\n* A Spot will connect to and receive incoming connections from any other ngether instance. \n* An ngether group will auto-connect each node with each other node, building a meshwork.\n* ngether has built-in modules for building a bubPubSub bridge from 'local' pubsubs to the meshwork. \n* ngether allows communication between mesh-nodes by addressing them in the bubpubsub topic: \n\t/ngetherId/   : will send via direct connection to the named ngether instance (spot or hub)\n* each ngether instance creates a REPL \n\n#\tuse: \n\n* ngether.emit  : to send a bubPubSub to the meshwork AND your own local bubpubsub instance\n\tngether.emit(topicsArray/topicString, DataObject);\n\tmyNG.emit('desktops/sync/emit', { a:1, b:2 } ); \n* ngether.broadcast  : to send a bubPubSub to the meshwork, but NOT to your own local bubpubsub instance\n\tngether.broadcast(topicsArray/topicString, DataObject);\n\tmyNG.broadcast('desktops/sync/broadcasting', { a:1, b:2 } );\n* ngether.tell : to directly address a list of spots/hubs \n\tngether.tell(topicsArray/topicString, DataObject, targetArray/targetString);\n\tmyNG.tell('desktops/sync/bla', { a:1, b:2 }, [ 'ngetherSpot02_9992_1222' ]);\n\tmyNG.tell('desktops/sync/bla', { a:1, b:2 }, [ 'ngetherSpot02_9992_1222', 'ngetherSpotF01_9993_1223' ] );\n\t\t\n# planned features:\n\n* transporting node events (eventEmitter type), not only bubPubSubs\n* direct file transfer between nodes\n\n# demo:\n\n* look at ng_demo.js\n\n* creating a spot and connecting its bubpubsub bridge to your local bubpubsub instance\n\t\t\t\tngether = new ngSpot(\n\t\t\t\t\tuserconfig,\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tngether._bubPubSubBridge_ToLocal(localBubPubSub);\n\t\t\t\t\t\tlog.add('SPOT ready for action!', 'error', 'demoSystem');\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\t\n* the very same for a hub.\n\t\t\t\tngether = new ngHub(\n\t\t\t\t\tuserconfig,\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tngether._bubPubSubBridge_ToLocal(localBubPubSub);\n\t\t\t\t\t\tlog.add('HUB ready for action!', 'error', 'demoSystem');\n\t\t\t\t\t}\n\t\t\t\t);\n\t\n\t",
  "readmeFilename": "README.md",
  "_id": "ngether@0.2.3",
  "dist": {
    "shasum": "3af6552116173fa31819861b42bd10f5609b47cc"
  },
  "_from": "ngether"
}
